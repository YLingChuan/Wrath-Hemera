#!/usr/bin/python3
import os
import sys
import time
import requests
import getopt
import pyfiglet
from prettytable import PrettyTable
from lib.utils import check

#path
path = os.getcwd()
cache = (path+'/cache')
#debug
#print(cache)

#Vul path
solr = (path+"/core/poc/solr")
struts2 = (path+"/core/poc/struts2")
drupal = (path+"/core/poc/drupal")
jboss = (path+"/core/poc/jboss")
nexus = (path+"/core/poc/nexus")
ofbiz = (path+"/core/poc/ofbiz")
#print(solr)




ascii_banner = pyfiglet.figlet_format("Wrath Hemera")
print(ascii_banner)


#Num
##solr
files = os.listdir(solr)
num_tmp_solr = len(files)
solrnum = (num_tmp_solr - 2)
##struts2
files = os.listdir(struts2)
num_tmp_struts2 = len(struts2)
struts2num = (num_tmp_struts2 - 44)
##drupal
files = os.listdir(drupal)
num_tmp_drupal = len(files)
drupalnum = (num_tmp_drupal - 2)
##Jboss
files = os.listdir(jboss)
num_tmp_jboss = len(files)
jbossnum = (num_tmp_jboss - 2)
##Jboss
files = os.listdir(nexus)
num_tmp_nexus = len(files)
nexusnum = (num_tmp_nexus - 2)
##OFbiz
files = os.listdir(ofbiz)
num_tmp_ofbiz = len(files)
ofbiznum = (num_tmp_ofbiz - 2)
'''
UPDATE POC NUMBER
'''
allpocnum = solrnum + struts2num + drupalnum + jbossnum + nexusnum + ofbiznum
print("\033[1;33m[+] Wrath Hemera has a total of %d vulnerabilities\033[0m"%(allpocnum))

'''
RUNNING WRATH HEMERA
'''
opts,args = getopt.getopt(sys.argv[1:],'-h-v-t:-c-m',['help','version','target','autoscan','clean','update','module','allmodules'])
for opt_name,opt_value in opts:

  if opt_name in ('-h','--help'):
    print("[+] Usage: python3 hemera.py [options]\n")
    print("[+] Options:")
    print("\t  -h,--help            Show  help message")
    print("\t  -v,--version         Show program's version number")
    print("\t  -t,--target          Set scan target")
    print("\t  --autoscan           Execution scanner")
    print("\t  -c,--clean           Clean up the cache files generated by the program")
    print("\t  -m,--module          Specified module scan")
    print("\t  --allmodules          Show All Modules")

    exit()


  if opt_name in ('-v','--version'):
    print("[+] Version:1.0.1")
    exit()

  if opt_name in ('--update'):
    print("[+] Checking for version update, please wait...")
    exit()

  if opt_name in ('-t','--target'):
  	input = (sys.argv[2])
  	with open(cache+'/url.log','w') as f:
  		f.write(input)
  	print("[+]Target:",input)
  	exit()

  if opt_name in ('-c','--clean'):
  	print("[+] The cache file has been cleaned up.")
  	os.system("rm -rf *.log && rm -rf cache/*")
  	exit()

  if opt_name in ('--autoscan'):
  	print("[+] Automated scanning has started.")
  	#find target.log
  	try:
  		log = open(cache + '/url.log','r')
  		log = log.read()
  		print("[+] Target:",log)
  	except:
  		ptint("[!] The target was not found, please set the target address first.")
  		exit()

  if opt_name in ('-m','--module'):
       module = (sys.argv[2])
       print( '[+] The module you choose is:',module)
       if module == "solr":
          os.system("python3 %s/make.py" %(solr))

       elif module == "struts2":
           os.system("python3 %s/make.py" %(struts2))
       elif module == "drupal":
           os.system("python3 %s/make.py" %(drupal))
       elif module == "jboss":
           os.system("python3 %s/make.py" %(jboss))
       elif module == "nexus":
           os.system("python3 %s/make.py" %(nexus))
       elif module == "ofbiz":
           os.system("python3 %s/make.py" %(ofbiz))
       else:

           print("[!] Unsupported module.")

  if opt_name in ('--allmodules'):
    table = PrettyTable(['Serial Number','Module Name','Introduction','Automatic use'])
    table.add_row(['1','weblogic',"Oracle WebLogic Server",'Y'])
    table.add_row(['2','thinkcmf','Open source content management framework','N'])
    table.add_row(['3','drupal','Open source content management framework','N'])
    table.add_row(['4','imagemagick','Convert, Edit, or Compose Digital Images','N'])
    table.add_row(['5','mysql','Database Service','Y'])
    table.add_row(['6','scrapy','Open source web crawler framework','N'])
    table.add_row(['7','ecshop','Free and open source e-commerce platform','N'])
    table.add_row(['8','influxdb','Open source time series database','N'])
    table.add_row(['9','nexus','Nexus','Y'])
    table.add_row(['10','shiro','Apache Shiro','Y'])
    table.add_row(['11','elasticsearch','a trademark of Elasticsearch B.V.','N'])
    table.add_row(['12','jackson','Jackson','N'])
    table.add_row(['13','nginx','high-performance HTTP server and reverse proxy','Y'])
    table.add_row(['14','skywalking','Apache SkyWalking','Y'])
    table.add_row(['15','activemq','Apache ActiveMQ','Y'])
    table.add_row(['16','electron','An open source framework developed by GitHub','N'])
    table.add_row(['17','java','Java','N'])
    table.add_row(['18','node','Cross-platform JavaScript execution environment','Y'])
    table.add_row(['19','solr','Apache solr','Y'])
    table.add_row(['20','apereo-cas','Apereo-CAS','Y'])
    table.add_row(['21','fastjson','convert Java Objects into their JSON representation','Y'])
    table.add_row(['22','jboss','Web application based on SOA architecture','Y'])
    table.add_row(['23','ofbiz','The Apache OFBiz Project','Y'])
    table.add_row(['24','spark','Apache Spark','Y'])
    table.add_row(['25','appweb','Embedded Web Server','Y'])
    table.add_row(['26','ffmpeg','FFmpeg','Y'])
    table.add_row(['27','jenkins','Open source continuous integration tool','Y'])
    table.add_row(['28','openssh','OpenBSD sub-project','Y'])
    table.add_row(['29','spring','Spring Framework','Y'])
    table.add_row(['30','aria2','Download manager','Y'])
    table.add_row(['31','flask','Lightweight web application framework','Y'])
    table.add_row(['32','jira','Defect Tracking Management System','Y'])
    table.add_row(['33','openssl','Open source software library package','Y'])
    table.add_row(['34','struts2','Apache Struts 2','Y'])
    table.add_row(['35','flink','Apache Flink','Y'])
    table.add_row(['36','jmeter','Apache JMeter','Y'])
    table.add_row(['37','php','general-purpose scripting language','Y'])
    table.add_row(['38','supervisor','Supervisor','Y'])
    table.add_row(['39','bash',"GNU Project's shell",'Y'])
    table.add_row(['40','ghostscript','interpreter for the PostScript language and PDF files','Y'])
    table.add_row(['41','joomla','Open source content management framework','Y'])
    table.add_row(['42','phpmailer','code library to send (transport) emails','Y'])
    table.add_row(['43','git','open source distributed version control system','Y'])
    table.add_row(['44','jupyter','open-source web application','Y'])
    table.add_row(['45','phpmyadmin','MySQL database management tool','Y'])
    table.add_row(['46','thinkphp','Open source content management framework','Y'])
    table.add_row(['47','coldfusion','Adobe ColdFusion','Y'])
    table.add_row(['48','gitea','A painless self-hosted Git service','Y'])
    table.add_row(['49','kibana','Explore, Visualize, Discover Data | Elastic','Y'])
    table.add_row(['50','phpunit','PHP Testing Framework','Y'])
    table.add_row(['51','tikiwiki','Open source content management framework','Y'])
    table.add_row(['52','confluence','Remote-Friendly Team Workspace','Y'])
    table.add_row(['53','gitlab','A painless self-hosted Git service','Y'])
    table.add_row(['54','laravel',' PHP Framework For Web Artisans','Y'])
    table.add_row(['55','postgres','open source database','Y'])
    table.add_row(['56','tomcat','Apache Tomcat','Y'])
    table.add_row(['57','gitlist','An elegant and modern git repository viewer','Y'])
    table.add_row(['58','libssh','The SSH Library','Y'])
    table.add_row(['59','python','Python Programming Language','N'])
    table.add_row(['60','unomi','Apache Unomi','Y'])
    table.add_row(['61','glassfish','Open Source Java EE Reference Implementation','N'])
    table.add_row(['62','liferay-portal','open source portal framework','Y'])
    table.add_row(['63','rails','A web-application framework','Y'])
    table.add_row(['64','uwsgi','building hosting services','Y'])
    table.add_row(['65','couchdb','Apache CouchDB','Y'])
    table.add_row(['66','goahead','Embedded Web Servers','Y'])
    table.add_row(['67','log4j','Apache Log4j','Y'])
    table.add_row(['68','redis','Key-value pair storage database','Y'])
    table.add_row(['69','discuz','Open source content management framework','Y'])
    table.add_row(['70','gogs','A painless self-hosted Git service','Y'])
    table.add_row(['71','magento','Magento','Y'])
    table.add_row(['72','rsync',' fast and extraordinarily versatile file copying tool','N'])
    table.add_row(['73','webmin','web-based interface for system administration for Unix','Y'])
    table.add_row(['74','django','Web framework for perfectionists with deadlines','N'])
    table.add_row(['75','h2database',' free SQL database written in Java','Y'])
    table.add_row(['76','mini_httpd','small HTTP server','Y'])
    table.add_row(['77','ruby','Ruby Programming Language','Y'])
    table.add_row(['78','wordpress','Open source content management framework','Y'])
    table.add_row(['79','dns','Domain Name System','Y'])
    table.add_row(['80','hadoop','Apache Hadoop','Y'])
    table.add_row(['81','mojarra','Mojarra','Y'])
    table.add_row(['82','saltstack','Python-based','Y'])
    table.add_row(['83','xxl-job','A distributed task scheduling framework','Y'])
    table.add_row(['84','docker','Empowering App Development for Developers','N'])
    table.add_row(['85','httpd','Apache HTTP Server','Y'])
    table.add_row(['86','mongo-express','Web-based MongoDB admin interface','Y'])
    table.add_row(['87','samba','SMB/CIFS','Y'])
    table.add_row(['88','zabbix','Network monitoring and management system','Y'])


    print(table)





#from lib.utils import autoscan
